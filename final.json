{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of storage account"
      }
    },
    "jumpstorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of storage account"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username"
      }
    },
    "jumpadminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username"
      }
    },
    "vmPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password"
      }
    },
    "dnsNameforLBIP": {
      "type": "string",
      "metadata": {
        "description": "DNS for Load Balancer IP"
      }
    },
    "jumpdnsNameforLBIP": {
      "type": "string",
      "metadata": {
        "description": "DNS for Load Balancer IP"
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "defaultValue": "softwareVM",
      "metadata": {
        "description": "Prefix to use for VM names"
      }
    },
    "jumpvmNamePrefix": {
      "type": "string",
      "defaultValue": "jumpVM",
      "metadata": {
        "description": "Prefix to use for VM names"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "Image Publisher"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Image Offer"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "metadata": {
        "description": "Image SKU"
      }
    },
    "lbName": {
      "type": "string",
      "defaultValue": "myLB",
      "metadata": {
        "description": "Load Balancer name"
      }
    },
    "nicNamePrefix": {
      "type": "string",
      "defaultValue": "nic",
      "metadata": {
        "description": "Network Interface name prefix"
      }
    },
    "jumpnicNamePrefix": {
      "type": "string",
      "defaultValue": "jumpnic",
      "metadata": {
        "description": "Network Interface name prefix"
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "defaultValue": "LBPublicIP",
      "metadata": {
        "description": "Public IP Name"
      }
    },
    "jumppublicIPAddressName": {
      "type": "string",
      "defaultValue": "jumpmyPublicIP",
      "metadata": {
        "description": "Public IP Name"
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "jenkinsVNET",
      "metadata": {
        "description": "VNET name"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A2",
      "metadata": {
        "description": "Size of the VM"
      }
    }
  },
  "variables": {
    "storageAccountType": "Standard_LRS",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "privatesub",
    "subnetPrefix": "10.0.0.0/24",
    "jumpsubnetPrefix": "10.0.1.0/24",
    "extentionname": "mycustomscript",
    "publicIPAddressType": "Dynamic",
    "securityRulesname": "rdpsecurity",
    "jumppublicIPAddressType": "Dynamic",
    "jumpstorageAccountType": "Standard_LRS",
    "jenkinsRulesname": "jenkinssec",
    "artifactoryRulesname": "artifactosec",
    "sonarrulesname": "sonarsec",
    "jumpnetworkSecurityGroupName": "jumpnsg",
    "jumpsubnetName": "publicsub",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables ('subnetName'))]",
    "jumpsubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables ('jumpsubnetName'))]",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]",
    "jumppublicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('jumppublicIPAddressName'))]",
    "softwarestorage": "[toLower( concat( parameters('storageAccountName'), uniqueString(resourceGroup().id) ) )]", 
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('lbName'))]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
    "networkSecurityGroupName": "softwarnsg",
    "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/BackendPool1')]",
    "lbProbeIDj": "[concat(variables('lbID'),'/probes/jenkins')]",
    "lbProbeIDa": "[concat(variables('lbID'),'/probes/artifactory')]",
    "lbProbeIDs": "[concat(variables('lbID'),'/probes/sonar')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('softwarestorage')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "comments": "Storage for Software server VM",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('jumpstorageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "comments": "Storage for Jump server VM",
      "properties": {
        "accountType": "[variables('jumpstorageAccountType')]"
      }
    },
    {
      "apiVersion": "2018-02-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "comments": "Public IP for Load Balancer",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameforLBIP')]"
        }
      }
    },
    {
      "apiVersion": "2018-02-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('jumppublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "comments": "Public IP for Jump Server",
      "properties": {
        "publicIPAllocationMethod": "[variables('jumppublicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('jumpdnsNameforLBIP')]"
        }
      }
    },
    {
        "apiVersion": "2018-02-01",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "[variables('networkSecurityGroupName')]",
        "location": "[resourceGroup().location]",
        "comments": "NSG for Software server",
        "properties": {
          "securityRules": [
            {
              "name": "RDP_Port",
              "properties": {
                "description": "This is the first rule",
                "protocol": "Tcp",
                "sourcePortRange": "3389",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "[variables('subnetPrefix')]",
                "destinationAddressPrefix": "[variables('subnetPrefix')]",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
              }
            },
            {
              "name": "Jenkins",
              "properties": {
                "description": "This is the first rule",
                "protocol": "Tcp",
                "sourcePortRange": "80",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 115,
                "direction": "Inbound"
              }
            },
            {
              "name": "sonarqube",
              "properties": {
                "description": "This is the first rule",
                "protocol": "Tcp",
                "sourcePortRange": "8080",
                "destinationPortRange": "8081",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 120,
                "direction": "Inbound"
              }
            },
            {
              "name": "artifactory",
              "properties": {
                "description": "This is the first rule",
                "protocol": "Tcp",
                "sourcePortRange": "9090",
                "destinationPortRange": "9000",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 125,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
        "name": "[concat(variables('networkSecurityGroupName'), '/', variables('jenkinsRulesname'))]",
        "apiVersion": "2018-02-01",
        "location": "[resourceGroup().location]",
        "comments": "Security rules for Jenkins",
        "scale": null,
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ],
        "properties": {
            "provisioningState": "Succeeded",
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "8080",
            "sourceAddressPrefix": "*",
            "destinationAddressPrefix": "*",
            "access": "Allow",
            "priority": 130,
            "direction": "Inbound"
        }
        
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "name": "[concat(variables('networkSecurityGroupName'), '/', variables('artifactoryRulesname'))]",
      "apiVersion": "2018-02-01",
      "location": "[resourceGroup().location]",
      "comments": "Security rules for Artifactory",
      "scale": null,
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
    ],
      "properties": {
          "provisioningState": "Succeeded",
          "protocol": "*",
          "sourcePortRange": "*",
          "destinationPortRange": "8081",
          "sourceAddressPrefix": "*",
          "destinationAddressPrefix": "*",
          "access": "Allow",
          "priority": 135,
          "direction": "Inbound"
      }
      
  },
  {
    "type": "Microsoft.Network/networkSecurityGroups/securityRules",
    "name": "[concat(variables('networkSecurityGroupName'), '/', variables('sonarrulesname'))]",
    "apiVersion": "2018-02-01",
    "location": "[resourceGroup().location]",
    "comments": "Security rules for SonarQube",
    "scale": null,
    "dependsOn": [
      "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
  ],
    "properties": {
        "provisioningState": "Succeeded",
        "protocol": "*",
        "sourcePortRange": "*",
        "destinationPortRange": "9000",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 140,
        "direction": "Inbound"
    }
    
},
      {
          "apiVersion": "2018-02-01",
          "type": "Microsoft.Network/networkSecurityGroups",
          "name": "[variables('jumpnetworkSecurityGroupName')]",
          "location": "[resourceGroup().location]",
          "comments": "NSG for Jump Server RDP",
          "properties": {
            "securityRules": [
              {
                "name": "jumpserver",
                "properties": {
                  "description": "Jump server",
                  "protocol": "Tcp",
                  "sourcePortRange": "3389",
                  "destinationPortRange": "3389",
                  "sourceAddressPrefix": "*",
                  "destinationAddressPrefix": "*",
                  "access": "Allow",
                  "priority": 100,
                  "direction": "Inbound"
                }
              }
          ]
          }
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
        "name": "[concat(variables('jumpnetworkSecurityGroupName'), '/', variables('securityRulesname'))]",
        "apiVersion": "2018-02-01",
        "location": "[resourceGroup().location]",
        "comments": "Security Rule for Jump Server RDP",
        "scale": null,
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkSecurityGroups', variables('jumpnetworkSecurityGroupName'))]"
      ],
        "properties": {
            "provisioningState": "Succeeded",
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "3389",
            "sourceAddressPrefix": "*",
            "destinationAddressPrefix": "*",
            "access": "Allow",
            "priority": 110,
            "direction": "Inbound"
        }
        
    },
    {
      "apiVersion": "2018-02-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "location": "[resourceGroup().location]",
      "comments": "VNet for both Servers, and Associate subnets with VNet",
      "dependsOn": [
          "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('jumpnetworkSecurityGroupName'))]"
        ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }  
            }
          },
          {
              "name": "[variables('jumpsubnetName')]",
              "properties": {
                "addressPrefix": "[variables('jumpsubnetPrefix')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('jumpnetworkSecurityGroupName'))]"
                }
              }
            }
         ]
      }
    },
    {
      "apiVersion": "2018-02-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('nicNamePrefix'))]",
      "location": "[resourceGroup().location]",
      "comments": "NIC for software server",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
        "[concat('Microsoft.Network/loadBalancers/', parameters('lbName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "softwareipconfig1",
            "properties": {
                "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"
                }
             ]
             
            }
          }
        ],"networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "apiVersion": "2018-02-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('jumpnicNamePrefix'))]",
      "location": "[resourceGroup().location]",
      "comments": "NIC for Jump server",
      "dependsOn": [
          "[resourceId('Microsoft.Network/publicIPAddresses/', parameters('jumppublicIPAddressName'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('jumpnetworkSecurityGroupName'))]",
          "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "jumpipconfig1",
            "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('jumppublicIPAddressName'))]"
                },
              "subnet": {
                "id": "[variables('jumpsubnetRef')]"
              }
             
            }
          }
        ],"networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('jumpnetworkSecurityGroupName'))]"
      }
      }
    },
    {
      "apiVersion": "2018-02-01",
      "name": "[parameters('lbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "comments": "Creating LB and associate rules",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "Backendpool1"
        }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 8080,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeIDj')]"
              }
            }
          }, 
          {
            "name": "artifactory",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 8080,
              "backendPort": 8081,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeIDa')]"
              }
            }
          },
          {
            "name": "sonar",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 9090,
              "backendPort": 9000,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeIDs')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "jenkins",
            "properties": {
              "protocol": "Tcp",
              "port": 8080,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          },
          {
            "name": "artifactory",
            "properties": {
              "protocol": "Tcp",
              "port": 8081,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          },
          {
            "name": "sonar",
            "properties": {
              "protocol": "Tcp",
              "port": 9000
              ,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmNamePrefix'))]",
      "location": "[resourceGroup().location]",
      "comments": "Creating VM for software server",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', parameters('nicNamePrefix'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS1_v2"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmNamePrefix'))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('vmPassword')]",
          "allowExtensionOperations": true
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nicNamePrefix'))]"
            }
          ]
        }
      }
},
{
"type": "Microsoft.Compute/virtualMachines/extensions",
"name": "[concat(parameters('vmNamePrefix'),'/Microsoft.Powershell.DSC')]",
"apiVersion": "2018-04-01",
"location": "[resourceGroup().location]",
"comments": "Adding custom extention for hardening software server",
"dependsOn": [
    "[concat('Microsoft.Compute/virtualMachines/', parameters('vmNamePrefix'))]"
],
"properties": {
    "publisher": "Microsoft.Powershell",
    "type": "DSC",
    "typeHandlerVersion": "2.76",
    "autoUpgradeMinorVersion": true,
    "settings": {
      "configuration": {
        "url": "https://raw.githubusercontent.com/sangaml/jenkinsaspass/master/hardening.zip",
        "script": "hardening.ps1",
        "function": "hardening"
      }
    }
}
},
    {
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('jumpvmNamePrefix'))]",
      "location": "[resourceGroup().location]",
      "comments": "Creating Jump server",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', parameters('jumpstorageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', parameters('jumpnicNamePrefix'))]"
      
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS1_v2"
        },
        "osProfile": {
          "computerName": "[concat(parameters('jumpvmNamePrefix'))]",
          "adminUsername": "[parameters('jumpadminUsername')]",
          "adminPassword": "[parameters('vmPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('jumpnicNamePrefix'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('jumpvmNamePrefix'),'/Microsoft.Powershell.DSC')]",
      "apiVersion": "2018-04-01",
      "location": "[resourceGroup().location]",
      "comments": "Adding custom extention for hardening software server",
      "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/', parameters('jumpvmNamePrefix'))]"
      ],
      "properties": {
          "publisher": "Microsoft.Powershell",
          "type": "DSC",
          "typeHandlerVersion": "2.76",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "configuration": {
              "url": "https://raw.githubusercontent.com/sangaml/jenkinsaspass/master/hardening.zip",
              "script": "hardening.ps1",
              "function": "hardening"
            }
          }
      }
    }
    

  ]
}
